const Discord = require("discord.js");
const { Intents, Collection } = Discord;
const client = new Discord.Client({ intents: 32767 });
const db = require("nrc.db");
require("discord-reply");

const { token, owners } = require("./config.json");

client.commands = new Collection();
client.aliases = new Collection();
client.stats = new Collection();
require("./handlers/Events.js")(client);
require(`./utils/komutcalistirici`)(client);
	

client.login(token).catch((error) =>
	console.error("LÃ¼tfen tokeni doÄŸru biÃ§imde girin!\n\n" + error)
);

Promise.prototype.del = (ms) => {
  if (this)
    this.then((m) => {
      if (m.deletable) setTimeout(() => m.delete(), Number(ms));
    });
};

process.on("uncaughtException", (err) => console.error(err.stack));
process.on("unhandledRejection", (err) => console.error(err.stack));
//kayÄ±t
client.on('interactionCreate', async (interaction) => {
  if (!interaction.isButton()) return;
  if(interaction.customId === "KayÄ±tOL"){
      interaction.member.roles.add("1014963368815235254")
      interaction.reply({embeds: [new Discord.MessageEmbed().setColor("RANDOM").setDescription(`${interaction.user}, **BaÅŸarÄ±lÄ± ÅŸekilde kayÄ±t oldunuz. Ä°yi eÄŸlenceler dileriz...**`)], ephemeral: true })
  }
});
//reklam-engel
client.on("messageCreate", async message=> {
  const reklam = ["discord.gg",];
  if (reklam.some(word => message.content.includes(word))) {
      if(!message.member.permissions.has("ADMINISTRATOR")){
      message.delete().catch((err) => {})
      message.channel.send({content: `${message.author}, **Reklam yapmaya Ã§alÄ±ÅŸtÄ±.**`}).then(msg => setTimeout(() => msg.delete().catch((err) => {}), 5000))
      }
}
});
//kÃ¼fÃ¼r engel
client.on("messageCreate", async msg => {
  const kufur = ["oÃ§", "amk", "ananÄ± sikiyim", "ananÄ±skm", "piÃ§", "amk", "amsk", "sikim", "sikiyim", "orospu Ã§ocuÄŸu", "piÃ§ kurusu", "kahpe", "orospu", "mal", "sik", "yarrak", "am", "amcÄ±k", "amÄ±k", "yarram", "sikimi ye", "mk", "mq", "aq", "ak", "amq",];
  if (kufur.some(word => msg.content.split().includes(word))) {
      if (!msg.member.permissions.has("ADMINISTRATOR")) {
          msg.delete().catch((err) => {})
          msg.channel.send(`${msg.author}, **Sunucuda kÃ¼fÃ¼r edemezsin.**`).then(mesaj => setTimeout(() => mesaj.delete().catch((err) => {}), 5000))
      }              
  }
});
client.on("messageUpdate", async (oldMessage, newMessage) => {
  const kufur = ["oÃ§", "amk", "ananÄ± sikiyim", "ananÄ±skm", "piÃ§", "amk", "amsk", "sikim", "sikiyim", "orospu Ã§ocuÄŸu", "piÃ§ kurusu", "kahpe", "orospu", "mal", "sik", "yarrak", "am", "amcÄ±k", "amÄ±k", "yarram", "sikimi ye", "mk", "mq", "aq", "ak", "amq",];
  if (kufur.some(word => newMessage.content.includes(word))) {
      if (!newMessage.member.permissions.has("ADMINISTRATOR")) {
          newMessage.delete().catch((err) => {})
          newMessage.channel.send(`${newMessage.author}, **Sunucuda kÃ¼fÃ¼r edemezsin.**`).then(msg => setTimeout(() => msg.delete().catch((err) => {}), 5000))
      }              
  }
});
//login-yazÄ±
const figlet = require('figlet');
const chalk = require('chalk');

client.on("ready", () => {
figlet(client.user.tag, function(err, data) {
  if (err) {
    console.log('hata var kontrol edin (ready)');
    console.dir(err);
    return;
  }  
console.log(chalk.white.bold(data));
});
})
//mta-bot-durum
const Gamedig = require('gamedig');
client.on("ready", () => {
setInterval(function() {
            Gamedig.query({
            type: 'mtasa',
            host: '193.223.107.175',
            }).then((state) => {
                client.user.setPresence({activities: [{ name: `Aktif: "${state.raw.numplayers}" oyuncuyu`, type: `WATCHING` }],status: `dnd`,});    
            }).catch((err) => {client.user.setPresence({activities: [{ name: `Kalite.`, type: `WATCHING` }],status: `dnd`,});})
        }, 10000);  
})
//Ã¶zel-komut
const { MessageEmbed } = require('discord.js')
const { QuickDB4 } = require("quick.db");
const db4 = new QuickDB();
const prefix = "!"

client.on("messageCreate", async message => {
	if(message.content.startsWith(prefix)){
	if(message.author.bot) return;
	if (!message.member.permissions.has("ADMINISTRATOR")) return;
	var args = message.content.split(/ +/g).slice(0);
	let Ã¶zelKomutum = message.content.substring(message.content.indexOf(prefix)+1, args[0].length);
	let Ã¶zelKomutlar = await db.get("komutlar."+message.guild.id+"."+Ã¶zelKomutum)
	if(!Ã¶zelKomutlar) return;	
		 if(args[1]){
			user = message.mentions.users.first() || client.users.cache.get(args[1])
		 }else{
			 user = message.mentions.users.first()
		 }
		if(!user) return message.reply({embeds: [{color: "RED", author: {name: `${message.guild.name}`,url: `https://discord.gg/mercedes`, icon_url: message.guild.iconURL({dynamic: true})}, description: ":x: **Rol verilecek Ã¼yeyi etiketleyin.**",footer: {text: `${message.author.tag} tarafÄ±ndan kullanÄ±ldÄ±.`, icon_url: message.author.avatarURL({dynamic: true})}}]})
		let member = message.guild.members.cache.get(user.id)
		if(!member) return message.reply({embeds: [{color: "RED", author: {name: `${message.guild.name}`,url: `https://discord.gg/mercedes`, icon_url: message.guild.iconURL({dynamic: true})}, description: ":x: **Rol verilecek Ã¼yeyi etiketleyin.**",footer: {text: `${message.author.tag} tarafÄ±ndan kullanÄ±ldÄ±.`, icon_url: message.author.avatarURL({dynamic: true})}}]})
		if(!message.guild.roles.cache.get(Ã¶zelKomutlar)) return	message.reply({embeds: [{color: "RED", author: {name: `${message.guild.name}`,url: `https://discord.gg/mercedes`, icon_url: message.guild.iconURL({dynamic: true})}, description: ":x: **Verilecek rolÃ¼ bulamadÄ±m.**",footer: {text: `${message.author.tag} tarafÄ±ndan kullanÄ±ldÄ±.`, icon_url: message.author.avatarURL({dynamic: true})}}]})
			if(member.roles.cache.get(Ã¶zelKomutlar)){
				member.roles.remove(Ã¶zelKomutlar)
				.then(() => {message.reply({embeds: [{color: "GREEN", author: {name: `${message.guild.name}`,url: `https://discord.gg/mercedes`, icon_url: message.guild.iconURL({dynamic: true})}, description: `:ballot_box_with_check: **${member} Ã¼yesinden ${message.guild.roles.cache.get(Ã¶zelKomutlar)} rolÃ¼ alÄ±ndÄ±.**`,footer: {text: `${message.author.tag} tarafÄ±ndan kullanÄ±ldÄ±.`, icon_url: message.author.avatarURL({dynamic: true})}}]})})
				.catch((err) => {message.reply({embeds: [{color: "GREEN", author: {name: `${message.guild.name}`,url: `https://discord.gg/mercedes`, icon_url: message.guild.iconURL({dynamic: true})}, description: `:x: **Verilecek rol kiÅŸinin veya benim Ã¼stÃ¼mde.**`,footer: {text: `${message.author.tag} tarafÄ±ndan kullanÄ±ldÄ±.`, icon_url: message.author.avatarURL({dynamic: true})}}]})})
			}else{
				member.roles.add(Ã¶zelKomutlar)
				.then(() => {message.reply({embeds: [{color: "GREEN", author: {name: `${message.guild.name}`,url: `https://discord.gg/mercedes`, icon_url: message.guild.iconURL({dynamic: true})}, description: `:ballot_box_with_check: **${member} Ã¼yesine ${message.guild.roles.cache.get(Ã¶zelKomutlar)} rolÃ¼ verildi.**`,footer: {text: `${message.author.tag} tarafÄ±ndan kullanÄ±ldÄ±.`, icon_url: message.author.avatarURL({dynamic: true})}}]})})
				.catch((err) => {message.reply({embeds: [{color: "GREEN", author: {name: `${message.guild.name}`,url: `https://discord.gg/mercedes`, icon_url: message.guild.iconURL({dynamic: true})}, description: `:x: **Verilecek rol kiÅŸinin veya benim Ã¼stÃ¼mde.**`,footer: {text: `${message.author.tag} tarafÄ±ndan kullanÄ±ldÄ±.`, icon_url: message.author.avatarURL({dynamic: true})}}]})})
			}
	 }	
});
//level-sistem
const {Collection2} = require("discord.js");
const { QuickDB2 } = require("quick.db");
const db2 = new QuickDB();
let levels = 1234

client.on("messageCreate", async message => {
if (message.author.bot) return;
  await db.add("stats."+message.guild.id+"."+message.member.id+".msg", 1);
  await db.add("stats."+message.guild.id+"."+message.member.id+".xp", 25);
  let user_info = await db.get("stats."+message.guild.id+"."+message.member.id);
  if(!user_info.level) await db.set("stats."+message.guild.id+"."+message.member.id+".level", 1);
  if(user_info.xp>levels*user_info.level){
	await db.add("stats."+message.guild.id+"."+message.member.id+".level", 1);
	await db.set("stats."+message.guild.id+"."+message.member.id+".xp", 25);
	message.reply({content:"ðŸŒŸ **"+message.author.tag+"** seviye **"+(user_info.level+1)+"**'e yÃ¼kseldin!"});
  } 
})

let voiceData = new Collection();
client.on('voiceStateUpdate', async (oldMember, newMember) => {
	if(newMember.member.user.bot) return;
  if(!oldMember.channel){
    voiceData.set(newMember.id, Date.now());
  }else if(!newMember.channel){
     if (voiceData.has(newMember.id)) {
      let time = await Date.now() - voiceData.get(newMember.id)
      await db.add("stats."+newMember.guild.id+"."+newMember.id+".voice", time)
      let newxp = parseInt(time/2000);
      await db.add("stats."+newMember.guild.id+"."+newMember.id+".xp", newxp)
      }
  }
}) 
//Ã¶zel-oda
const {MessageActionRow, MessageButton} = require("discord.js")

client.on('interactionCreate', async (interaction) => {
	if (!interaction.isButton()) return;
	if(interaction.customId === "GurluOda"){
			let kanalÄ±n = "YOK"
			interaction.guild.channels.cache.forEach(c => {
				if(c.type === "GUILD_TEXT"){
					if(c.topic){
						if(c.topic.includes(interaction.user.id)){
							kanalÄ±n = `${c} - ${interaction.guild.channels.cache.get(c.topic.split("_")[1])}`
						}
					}
				}
			})
			if(kanalÄ±n != "YOK") return interaction.reply({content: `Zaten bir Ã¶zel oda oluÅŸturmuÅŸsunuz. ${kanalÄ±n}`, ephemeral: true})					
		const Ã¶zelOda = await new Modal() 
		.setCustomId('GurluOzelOdaPanel')
		.setTitle(`${interaction.guild.name} Ã–zel Oda Sistemi`)
		.addComponents(
		  new TextInputComponent() 
		  .setCustomId('odaName')
		  .setLabel('OLUÅžTURMAK Ä°STEDÄ°ÄžÄ°NÄ°Z KANALIN ADI?')
		  .setStyle('SHORT') 
		  .setMinLength(3)
		  .setMaxLength(25)
		  .setPlaceholder('Kanal adÄ±nÄ± girin...')
		  .setRequired(true)
		)
		.addComponents(
		  new TextInputComponent() 
		  .setCustomId('odaGizli')
		  .setLabel('SES HERKESE AÃ‡IK OLSUN MU?.')
		  .setStyle('SHORT') 
		  .setMinLength(4)
		  .setMaxLength(5)
		  .setPlaceholder('Sadece EVET veya HAYIR yazÄ±n!')
		  .setRequired(true)
		)
		await showModal(Ã¶zelOda, {
			client: client, 
			interaction: interaction 
		  })
	}
	if(interaction.customId === "Ã–zelOdaSil"){
		await interaction.reply({content: `**Kanallar 5 saniye iÃ§erisinde silinecek.**`})
		setTimeout(async()=>{	
			if(!interaction.channel) return;
			await interaction.guild.channels.cache.get(interaction.channel.topic.split("_")[1]).delete().catch(()=>{})
			await interaction.channel.delete().catch(()=>{})
		}, 5000)
	}
	if(interaction.customId === "Ã–zelOdaGizli"){
		if(!interaction.channel.topic) return interaction.reply({content: `**Ses kanalÄ±nÄ± bulamÄ±yorum.**`, ephemeral: true})
		const sesKanal = interaction.guild.channels.cache.get(interaction.channel.topic.split("_")[1])
		if(!sesKanal) return interaction.reply({content: `**Ses kanalÄ±nÄ± bulamÄ±yorum.**`, ephemeral: true})
			await sesKanal.permissionOverwrites.edit(interaction.guild.roles.cache.get(interaction.guild.id), {CONNECT:false,})
			await interaction.reply({content: `Ses kanalÄ±nÄ±z Ã¼yelere gizlendi.`, ephemeral: true})
			await interaction.message.edit({components:[
			new MessageActionRow()
			.addComponents(	
			new MessageButton()
			.setCustomId('Ã–zelOdaAcik')
			.setLabel('(SES) KanalÄ± herkese aÃ§Ä±k yap.')
			.setStyle('PRIMARY'),
			new MessageButton()
			.setCustomId('Ã–zelOdaÄ°zinVer')
			.setLabel('KullanÄ±cÄ± izni ver')
			.setStyle('PRIMARY'),						
			new MessageButton()
			.setCustomId('Ã–zelOdaÄ°zinSil')
			.setLabel('KullanÄ±cÄ± yasakla')
			.setStyle('PRIMARY'),						
			new MessageButton()
			.setCustomId('Ã–zelOdaSil')
			.setLabel('KANALLARI SÄ°L')
			.setStyle('DANGER'),	
			)]		
			})
	}
	if(interaction.customId === "Ã–zelOdaAcik"){
		if(!interaction.channel.topic) return interaction.reply({content: `**Ses kanalÄ±nÄ± bulamÄ±yorum.**`, ephemeral: true})
		const sesKanal = interaction.guild.channels.cache.get(interaction.channel.topic.split("_")[1])
		if(!sesKanal) return interaction.reply({content: `**Ses kanalÄ±nÄ± bulamÄ±yorum.**`, ephemeral: true})
			await sesKanal.permissionOverwrites.edit(interaction.guild.roles.cache.get(interaction.guild.id), {CONNECT:true,})
			await interaction.reply({content: `Ses kanalÄ±nÄ±z Ã¼yelere aÃ§Ä±ldÄ±.`, ephemeral: true})
			await interaction.message.edit({components:[
			new MessageActionRow()
			.addComponents(	
			new MessageButton()
			.setCustomId('Ã–zelOdaGizli')
			.setLabel('(SES) KanalÄ± herkese gizli yap.')
			.setStyle('PRIMARY'),
			new MessageButton()
			.setCustomId('Ã–zelOdaÄ°zinVer')
			.setLabel('KullanÄ±cÄ± izni ver')
			.setStyle('PRIMARY'),						
			new MessageButton()
			.setCustomId('Ã–zelOdaÄ°zinSil')
			.setLabel('KullanÄ±cÄ± yasakla')
			.setStyle('PRIMARY'),						
			new MessageButton()
			.setCustomId('Ã–zelOdaSil')
			.setLabel('KANALLARI SÄ°L')
			.setStyle('DANGER'),	
			)]		
			})
	}
	if(interaction.customId === "Ã–zelOdaÄ°zinVer"){
	const Ã¶zelOdaÄ°zin = await new Modal() 
	.setCustomId('kullanÄ±cÄ±Ä°zinPanel')
	.setTitle(`${interaction.guild.name} Ã–zel Oda Ä°zin Verme`)
	.addComponents(
	  new TextInputComponent() 
	  .setCustomId('kullanÄ±cÄ±Ä°zin')
	  .setLabel("Ä°ZÄ°N VERMEK Ä°STEDÄ°ÄžÄ°NÄ°Z KULLANICI ID'SI?")
	  .setStyle('SHORT') 
	  .setMinLength(18)
	  .setMaxLength(18)
	  .setPlaceholder('Ã–rn: 339855245599309824')
	  .setRequired(true)
	)
	await showModal(Ã¶zelOdaÄ°zin, {
		client: client, 
		interaction: interaction 
	  })		
	}	
	if(interaction.customId === "Ã–zelOdaÄ°zinSil"){
		const Ã¶zelOdaYasakla = await new Modal() 
		.setCustomId('kullanÄ±cÄ±YasakPanel')
		.setTitle(`${interaction.guild.name} Ã–zel Oda Yasaklama`)
		.addComponents(
		  new TextInputComponent() 
		  .setCustomId('kullanÄ±cÄ±Yasak')
		  .setLabel("Yasaklamak Ä°STEDÄ°ÄžÄ°NÄ°Z KULLANICI ID'SI?")
		  .setStyle('SHORT') 
		  .setMinLength(18)
		  .setMaxLength(18)
		  .setPlaceholder('Ã–rn: 339855245599309824')
		  .setRequired(true)
		)
		await showModal(Ã¶zelOdaYasakla, {
			client: client, 
			interaction: interaction 
		  })		
	}
});

client.on('modalSubmit',async (modal) => {
	if(modal.customId === 'GurluOzelOdaPanel'){
		const odaName = modal.getTextInputValue('odaName')
		const odaGizli = modal.getTextInputValue('odaGizli')
		let kilitD = ""
			if(odaGizli === "evet"){kilitD = true}else{kilitD = false}
		await modal.deferReply({ ephemeral: true })	
		modal.member.guild.channels.create(`${odaName}`,{type: 'GUILD_VOICE',}).then(async sesKanalÄ± => {
			await sesKanalÄ±.setParent(modal.channel.parentId)
			await sesKanalÄ±.permissionOverwrites.edit(modal.member, {VIEW_CHANNEL:true, CONNECT:true, SPEAK:true, MUTE_MEMBERS:true, DEAFEN_MEMBERS:true, STREAM:true, USE_VAD:true})
			await sesKanalÄ±.permissionOverwrites.edit(modal.member.guild.roles.cache.get(modal.member.guild.id), {VIEW_CHANNEL:true, CONNECT:kilitD, SPEAK:true, STREAM:true, USE_VAD:true})				
			await modal.member.guild.channels.create(`${odaName}`,{type: 'GUILD_TEXT'}).then(async mesajKanalÄ± =>{
				await mesajKanalÄ±.setParent(modal.channel.parentId)
				await mesajKanalÄ±.edit({topic: `${modal.member.id}_${sesKanalÄ±.id}`})
				await mesajKanalÄ±.permissionOverwrites.edit(modal.member, {VIEW_CHANNEL:true, SEND_MESSAGES:false, MENTION_EVERYONE: false, READ_MESSAGE_HISTORY:true})
					const row = await new MessageActionRow()
					if(kilitD === true){
					row.addComponents(	
					new MessageButton()
					.setCustomId('Ã–zelOdaGizli')
					.setLabel('(SES) KanalÄ± herkese gizli yap.')
					.setStyle('PRIMARY'),	
					new MessageButton()
					.setCustomId('Ã–zelOdaÄ°zinVer')
					.setLabel('KullanÄ±cÄ± izni ver')
					.setStyle('PRIMARY'),						
					new MessageButton()
					.setCustomId('Ã–zelOdaÄ°zinSil')
					.setLabel('KullanÄ±cÄ± yasakla')
					.setStyle('PRIMARY'),						
					new MessageButton()
					.setCustomId('Ã–zelOdaSil')
					.setLabel('KANALLARI SÄ°L')
					.setStyle('DANGER'),	
					);	
					}else{
					row.addComponents(	
					new MessageButton()
					.setCustomId('Ã–zelOdaAcik')
					.setLabel('(SES) KanalÄ± herkese aÃ§Ä±k yap.')
					.setStyle('PRIMARY'),
					new MessageButton()
					.setCustomId('Ã–zelOdaÄ°zinVer')
					.setLabel('KullanÄ±cÄ± izni ver')
					.setStyle('PRIMARY'),						
					new MessageButton()
					.setCustomId('Ã–zelOdaÄ°zinSil')
					.setLabel('KullanÄ±cÄ± yasakla')
					.setStyle('PRIMARY'),						
					new MessageButton()
					.setCustomId('Ã–zelOdaSil')
					.setLabel('KANALLARI SÄ°L')
					.setStyle('DANGER'),	
					);		
					}						
				await mesajKanalÄ±.send({content: `KanalÄ±na hoÅŸ geldin, ${modal.member}!\n\nâ€¢ Kanal herkese aÃ§Ä±ksa, yasaklÄ± kullanÄ±cÄ±lar odana giremez.\nâ€¢ Kanal kilitliyse, sadece izinli kullanÄ±cÄ±lar odana girebilir.\nâ€¢ Sesli kanalÄ±nÄ±z 3 dakika boyunca boÅŸ kalÄ±rsa silinir.`, components: [row]})
				await modal.followUp({ content: `Ses kanalÄ±nÄ±z baÅŸarÄ±yla oluÅŸturuldu: ${sesKanalÄ±}.\nKanalÄ±nÄ±zÄ± kontrol edin/yÃ¶netin: ${mesajKanalÄ±}`, ephemeral: true })				
			})
		})			
	}
	if(modal.customId === 'kullanÄ±cÄ±Ä°zinPanel'){
		const izinID = modal.getTextInputValue('kullanÄ±cÄ±Ä°zin')
		await modal.deferReply({ ephemeral: true })	
		if(isNaN(izinID)) return modal.followUp({content: `KullanÄ±cÄ± ID'si sadece sayÄ±lardan oluÅŸabilir.`, ephemeral: true});
		if(!modal.channel.topic) return  modal.followUp({content: `YanlÄ±ÅŸ giden bir ÅŸeyler oldu.`, ephemeral: true});
		let izinliKullanÄ±cÄ± = await modal.member.guild.members.cache.get(izinID)
		if(!izinliKullanÄ±cÄ±) return modal.followUp({content: `Bu kullanÄ±cÄ± sunucuda bulunmuyor.`, ephemeral: true})
		let sesKanalÄ±mID = await modal.channel.topic.split("_")[1]
		let sesKanalÄ±m = await modal.member.guild.channels.cache.get(sesKanalÄ±mID)
		if(!sesKanalÄ±m) return modal.followUp({content: `Ses kanalÄ±nÄ± bulamadÄ±m, bir yetkiliye durumunu belirtin.`})
		await sesKanalÄ±m.permissionOverwrites.edit(izinliKullanÄ±cÄ±, {CONNECT:true})
		modal.followUp({content: `${izinliKullanÄ±cÄ±} Ã¼yesine izin verildi.`})
	}
	if(modal.customId === 'kullanÄ±cÄ±YasakPanel'){
		const izinID = modal.getTextInputValue('kullanÄ±cÄ±Yasak')
		await modal.deferReply({ ephemeral: true })	
		if(isNaN(izinID)) return modal.followUp({content: `KullanÄ±cÄ± ID'si sadece sayÄ±lardan oluÅŸabilir.`, ephemeral: true});
		if(!modal.channel.topic) return  modal.followUp({content: `YanlÄ±ÅŸ giden bir ÅŸeyler oldu.`, ephemeral: true});
		let izinliKullanÄ±cÄ± = await modal.member.guild.members.cache.get(izinID)
		if(!izinliKullanÄ±cÄ±) return modal.followUp({content: `Bu kullanÄ±cÄ± sunucuda bulunmuyor.`, ephemeral: true})
		let sesKanalÄ±mID = await modal.channel.topic.split("_")[1]
		let sesKanalÄ±m = await modal.member.guild.channels.cache.get(sesKanalÄ±mID)
		if(!sesKanalÄ±m) return modal.followUp({content: `Ses kanalÄ±nÄ± bulamadÄ±m, bir yetkiliye durumunu belirtin.`})
		await sesKanalÄ±m.permissionOverwrites.edit(izinliKullanÄ±cÄ±, {CONNECT:false})
		await modal.followUp({content: `${izinliKullanÄ±cÄ±} Ã¼yesi yasaklandÄ±.`})
	}
})
const kategoriID = "1038162754953023500" //Ã–zel odalarÄ±n oluÅŸturulduÄŸu kategori id'si
setInterval(function() {
	client.channels.cache.forEach(sc => {
		if(sc.type === "GUILD_VOICE" && sc.parentId === kategoriID && sc.members.size === 0){
			sc.delete().then(kanal =>{
				kanal.guild.channels.cache.forEach(sc => {
					if(sc.type === "GUILD_TEXT" && sc.parentId === kategoriID && sc.topic && sc.topic.includes(kanal.id)){
						sc.delete()
					}
				})
			})
		}
	})
}, 180000)

const { Modal, TextInputComponent, showModal } = require('discord-modals') 
require('discord-modals')(client);  

//afk-sistem
const { QuickDB3 } = require("quick.db");
const db3 = new QuickDB();

client.on("messageCreate", async msg => {
	if(msg.author.bot) return;
  if(msg.content.startsWith("!afk")) return; 
  let afk = msg.mentions.users.first()
  if(await db.get("afklar."+msg.author.id+".sebep")){ 
	await msg.reply({embeds: [new MessageEmbed().setColor("GREEN").setDescription(`**ArtÄ±k AFK deÄŸilsin. Ä°yi eÄŸlenceler.**`)]}).then(msg => {setTimeout(() => {msg.delete().catch((err) => { })}, 10000)})
	await db.delete("afklar."+msg.author.id+".sebep")
	let nickname = await msg.member.nickname || await msg.author.username 
	if(!nickname.includes("[AFK]")) return;
	await msg.member.setNickname(`${nickname.split("[AFK]")[1]}`)
	if(!afk) return;
	if(!await db.get("afklar."+afk.id+".sebep")) return;
	let sebebi = await db.get("afklar."+afk.id+".sebep")
	await msg.reply({embeds: [new MessageEmbed().setColor("RANDOM").setDescription(`${afk}, bir sÃ¼redir AFK.\n**Sebep:** ${sebebi}`)]}).then(msg => {setTimeout(() => {msg.delete().catch((err) => { })}, 10000)})
  }else{
	if(!afk) return;
	if(!await db.get("afklar."+afk.id+".sebep")) return;
	let sebebi = await db.get("afklar."+afk.id+".sebep")
	await msg.reply({embeds: [new MessageEmbed().setColor("RANDOM").setDescription(`${afk}, bir sÃ¼redir AFK.\n**Sebep:** ${sebebi}`)]}).then(msg => {setTimeout(() => {msg.delete().catch((err) => { })}, 10000)})
  }
})